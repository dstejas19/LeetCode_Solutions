class Solution {
public:
    int res;
    vector<int> combo;
    
    int countArrangement(int n) {
        for(int i=1;i<=n;i++) {
            combo.push_back(i);
        }
        
        res = 0;
        
        construct(n, 0);
        
        return res;
    }
    
    void construct(int n, int i) {
        if(i >= n) {
            res++;
            return;
        }
        for(int idx=i;idx<combo.size();idx++) {
            swap(combo[i], combo[idx]);
            if(combo[i] % (i+1) == 0 || (i+1) % combo[i] == 0)
                construct(n, i+1);
            swap(combo[i], combo[idx]);
        }
    }
    
    int checker() {
        for(int i=0;i<combo.size();i++) {
            if(combo[i] % (i+1) == 0) {
                continue;
            }
            else if((i+1) % combo[i] == 0) {
                continue;
            }
            else {
                return 0;
            }
        }
        res++;
        return 1;
    }
};
