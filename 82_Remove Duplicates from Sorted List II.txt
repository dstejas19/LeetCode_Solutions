/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* ans = head;
        ListNode* prev = NULL;
        
        while(head) {
            ListNode* temp = head->next;
            bool count = 0;
            while(temp) {
                if(temp->val == head->val) {
                    count = true;
                    temp = temp->next;
                    continue;
                }
                break;
            }
            
            if(count) {
                if(ans == head) {
                    ans = temp;
                    prev = temp;
                }
                else {
                    prev->next = temp;
                }
                head = temp;
                continue;
            }
            
            prev = head;
            head = head->next;
        }
        
        return ans;
    }
};
