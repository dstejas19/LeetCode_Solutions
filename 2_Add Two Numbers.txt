/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int carry;
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode(0);
        ListNode* head = ans;
        carry = 0;
        
        while(l1 && l2) {
            int num = l1->val + l2->val + carry;
            if(num > 9) {
                num = num%10;
                carry = 1;
            }
            else {
                carry = 0;
            }
            
            head->next = new ListNode(num);
            head = head->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        
        head = fill(l1, head);
        head = fill(l2, head);
        
        if(carry == 1) {
            head->next = new ListNode(1);
            head = head->next;
        }
        
        return ans->next;
    }
    
    ListNode* fill(ListNode* l, ListNode* head) {
        while(l) {
            int num = l->val + carry;
            if(num > 9) {
                num = num%10;
                carry = 1;
            }
            else {
                carry = 0;
            }
            
            head->next = new ListNode(num);
            head = head->next;
            l = l->next;
        }
        
        return head;
    }
};
